// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model User {
	token String
	jwtToken String @default("")
	id Int @id @unique
	email String
	login String @unique
	first_name String
	last_name String
	large_pic String
	medium_pic String
	small_pic String
	createAt DateTime @default(now())
	updateAt DateTime @updatedAt
	sentMessages   Message[] @relation("SentMessage")
	rooms Room[] @relation("RoomUser")
	privateRoom PrivateRoom[] @relation("PrivateRoomUser")
	ownedRooms Room[] @relation("RoomOwner")
	invitedRooms Room[] @relation("RoomInvitedUser")
	administratedRooms Room[] @relation("RoomAdministrator")
	bannedRooms Room[] @relation("RoomBannedUser")
	mutedRooms Room[] @relation("RoomMutedUser")
	blockedByUsers User[] @relation("BlockedUser")
	blockedUsers User[] @relation("BlockedUser")
	two_fa Boolean @default(false)
}
model Authenticator {
	checked Boolean @unique
}

model Data {
	code String @unique
}

model Room {
	id        Int       @id @default(autoincrement())
	name      String    @unique
	password  String?
	type      String  @default("PUBLIC")
	createdAt DateTime  @default(now())
	updatedAt DateTime  @updatedAt
	messages  Message[]
	users     User[]   @relation("RoomUser")
	owner     User @relation("RoomOwner", fields: [id], references: [id])
	ownerId   Int
	invitedUsers User[] @relation("RoomInvitedUser")
	administrators User[] @relation("RoomAdministrator")
	bannedUsers User[] @relation("RoomBannedUser")
	mutedUsers User[] @relation("RoomMutedUser")
}

model PrivateRoom {
	id String @unique @id
	users User[] @relation("PrivateRoomUser")
	messages Message[]
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Message {
	id             Int      @id @default(autoincrement())
	content        String
	sender         User     @relation("SentMessage", fields: [senderLogin], references: [login])
	senderLogin    String
	room           Room?    @relation(fields: [roomId], references: [id])
	roomId         Int?
	privateRoom    PrivateRoom? @relation(fields: [privateRoomId], references: [id])
	privateRoomId  String?
	createdAt      DateTime @default(now())
	updatedAt      DateTime @updatedAt
}
